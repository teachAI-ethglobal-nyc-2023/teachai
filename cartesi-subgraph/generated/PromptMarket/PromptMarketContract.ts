// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class logBroadcast extends ethereum.Event {
  get params(): logBroadcast__Params {
    return new logBroadcast__Params(this);
  }
}

export class logBroadcast__Params {
  _event: logBroadcast;

  constructor(event: logBroadcast) {
    this._event = event;
  }

  get cid(): string {
    return this._event.parameters[0].value.toString();
  }

  get broadcaster(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class logFeedback extends ethereum.Event {
  get params(): logFeedback__Params {
    return new logFeedback__Params(this);
  }
}

export class logFeedback__Params {
  _event: logFeedback;

  constructor(event: logFeedback) {
    this._event = event;
  }

  get promptNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get isOneBetter(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }

  get feedbackProvider(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class logInference extends ethereum.Event {
  get params(): logInference__Params {
    return new logInference__Params(this);
  }
}

export class logInference__Params {
  _event: logInference;

  constructor(event: logInference) {
    this._event = event;
  }

  get promptNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get textOne(): string {
    return this._event.parameters[1].value.toString();
  }

  get textTwo(): string {
    return this._event.parameters[2].value.toString();
  }

  get modelNumber(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class logModel extends ethereum.Event {
  get params(): logModel__Params {
    return new logModel__Params(this);
  }
}

export class logModel__Params {
  _event: logModel;

  constructor(event: logModel) {
    this._event = event;
  }

  get modelNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get modelID(): string {
    return this._event.parameters[1].value.toString();
  }

  get modelTitle(): string {
    return this._event.parameters[2].value.toString();
  }

  get modelOwner(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class logPrompt extends ethereum.Event {
  get params(): logPrompt__Params {
    return new logPrompt__Params(this);
  }
}

export class logPrompt__Params {
  _event: logPrompt;

  constructor(event: logPrompt) {
    this._event = event;
  }

  get promptNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get modelNumber(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get question(): string {
    return this._event.parameters[2].value.toString();
  }

  get option1(): string {
    return this._event.parameters[3].value.toString();
  }

  get option2(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class PromptMarketContract__modelsResult {
  value0: string;
  value1: Address;
  value2: string;

  constructor(value0: string, value1: Address, value2: string) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    return map;
  }

  getModelID(): string {
    return this.value0;
  }

  getModelOwner(): Address {
    return this.value1;
  }

  getModelTitle(): string {
    return this.value2;
  }
}

export class PromptMarketContract__promptsResult {
  value0: string;
  value1: string;
  value2: string;
  value3: boolean;
  value4: Address;
  value5: boolean;
  value6: boolean;
  value7: Address;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: boolean,
    value4: Address,
    value5: boolean,
    value6: boolean,
    value7: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromBoolean(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromBoolean(this.value6));
    map.set("value7", ethereum.Value.fromAddress(this.value7));
    return map;
  }

  getQuestion(): string {
    return this.value0;
  }

  getOption1(): string {
    return this.value1;
  }

  getOption2(): string {
    return this.value2;
  }

  getInference(): boolean {
    return this.value3;
  }

  getInferenceProvider(): Address {
    return this.value4;
  }

  getResponded(): boolean {
    return this.value5;
  }

  getIsOneBetter(): boolean {
    return this.value6;
  }

  getResponder(): Address {
    return this.value7;
  }
}

export class PromptMarketContract extends ethereum.SmartContract {
  static bind(address: Address): PromptMarketContract {
    return new PromptMarketContract("PromptMarketContract", address);
  }

  modelCount(): BigInt {
    let result = super.call("modelCount", "modelCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_modelCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("modelCount", "modelCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  models(param0: BigInt): PromptMarketContract__modelsResult {
    let result = super.call(
      "models",
      "models(uint256):(string,address,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new PromptMarketContract__modelsResult(
      result[0].toString(),
      result[1].toAddress(),
      result[2].toString()
    );
  }

  try_models(
    param0: BigInt
  ): ethereum.CallResult<PromptMarketContract__modelsResult> {
    let result = super.tryCall(
      "models",
      "models(uint256):(string,address,string)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PromptMarketContract__modelsResult(
        value[0].toString(),
        value[1].toAddress(),
        value[2].toString()
      )
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  promptCount(): BigInt {
    let result = super.call("promptCount", "promptCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_promptCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("promptCount", "promptCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  prompts(param0: BigInt): PromptMarketContract__promptsResult {
    let result = super.call(
      "prompts",
      "prompts(uint256):(string,string,string,bool,address,bool,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new PromptMarketContract__promptsResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toBoolean(),
      result[4].toAddress(),
      result[5].toBoolean(),
      result[6].toBoolean(),
      result[7].toAddress()
    );
  }

  try_prompts(
    param0: BigInt
  ): ethereum.CallResult<PromptMarketContract__promptsResult> {
    let result = super.tryCall(
      "prompts",
      "prompts(uint256):(string,string,string,bool,address,bool,bool,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PromptMarketContract__promptsResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toBoolean(),
        value[4].toAddress(),
        value[5].toBoolean(),
        value[6].toBoolean(),
        value[7].toAddress()
      )
    );
  }

  taiToken(): Address {
    let result = super.call("taiToken", "taiToken():(address)", []);

    return result[0].toAddress();
  }

  try_taiToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("taiToken", "taiToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _taiToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BroadcastUploadCall extends ethereum.Call {
  get inputs(): BroadcastUploadCall__Inputs {
    return new BroadcastUploadCall__Inputs(this);
  }

  get outputs(): BroadcastUploadCall__Outputs {
    return new BroadcastUploadCall__Outputs(this);
  }
}

export class BroadcastUploadCall__Inputs {
  _call: BroadcastUploadCall;

  constructor(call: BroadcastUploadCall) {
    this._call = call;
  }

  get cid(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class BroadcastUploadCall__Outputs {
  _call: BroadcastUploadCall;

  constructor(call: BroadcastUploadCall) {
    this._call = call;
  }
}

export class CreateInferenceCall extends ethereum.Call {
  get inputs(): CreateInferenceCall__Inputs {
    return new CreateInferenceCall__Inputs(this);
  }

  get outputs(): CreateInferenceCall__Outputs {
    return new CreateInferenceCall__Outputs(this);
  }
}

export class CreateInferenceCall__Inputs {
  _call: CreateInferenceCall;

  constructor(call: CreateInferenceCall) {
    this._call = call;
  }

  get promptNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get textOne(): string {
    return this._call.inputValues[1].value.toString();
  }

  get textTwo(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class CreateInferenceCall__Outputs {
  _call: CreateInferenceCall;

  constructor(call: CreateInferenceCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RespondToPromptOptionsCall extends ethereum.Call {
  get inputs(): RespondToPromptOptionsCall__Inputs {
    return new RespondToPromptOptionsCall__Inputs(this);
  }

  get outputs(): RespondToPromptOptionsCall__Outputs {
    return new RespondToPromptOptionsCall__Outputs(this);
  }
}

export class RespondToPromptOptionsCall__Inputs {
  _call: RespondToPromptOptionsCall;

  constructor(call: RespondToPromptOptionsCall) {
    this._call = call;
  }

  get promptNumber(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get responseIndex(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RespondToPromptOptionsCall__Outputs {
  _call: RespondToPromptOptionsCall;

  constructor(call: RespondToPromptOptionsCall) {
    this._call = call;
  }
}

export class SetPromptCall extends ethereum.Call {
  get inputs(): SetPromptCall__Inputs {
    return new SetPromptCall__Inputs(this);
  }

  get outputs(): SetPromptCall__Outputs {
    return new SetPromptCall__Outputs(this);
  }
}

export class SetPromptCall__Inputs {
  _call: SetPromptCall;

  constructor(call: SetPromptCall) {
    this._call = call;
  }

  get question(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetPromptCall__Outputs {
  _call: SetPromptCall;

  constructor(call: SetPromptCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateModelCall extends ethereum.Call {
  get inputs(): UpdateModelCall__Inputs {
    return new UpdateModelCall__Inputs(this);
  }

  get outputs(): UpdateModelCall__Outputs {
    return new UpdateModelCall__Outputs(this);
  }
}

export class UpdateModelCall__Inputs {
  _call: UpdateModelCall;

  constructor(call: UpdateModelCall) {
    this._call = call;
  }

  get _modelID(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _modelOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _modelTitle(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class UpdateModelCall__Outputs {
  _call: UpdateModelCall;

  constructor(call: UpdateModelCall) {
    this._call = call;
  }
}

export class WithdrawTokensCall extends ethereum.Call {
  get inputs(): WithdrawTokensCall__Inputs {
    return new WithdrawTokensCall__Inputs(this);
  }

  get outputs(): WithdrawTokensCall__Outputs {
    return new WithdrawTokensCall__Outputs(this);
  }
}

export class WithdrawTokensCall__Inputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawTokensCall__Outputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }
}
